name: Process order
on:
    issues:
        types: [labeled]
concurrency: 'main'

jobs:
    validation:
        runs-on: ubuntu-latest
        outputs:
            authorised-actor: ${{ steps.authorised-actor-check.outputs.valid && github.event.label.name == 'merge' }}
            has-pizza: ${{ contains(github.event.issue.labels.*.name, 'pizza') }}
            has-burger: ${{ contains(github.event.issue.labels.*.name, 'burger') }}
        steps:
            - name: Check if actor is authorised
              id: authorised-actor-check
              shell: bash
              run: |
                  if [ "${{ contains(fromJSON(secrets.AUTHORISED_MERGE), github.triggering_actor) }}" ]; then
                    echo "valid=true" >> $GITHUB_OUTPUT;
                  else
                    echo "valid=false" >> $GITHUB_OUTPUT;
                  fi

    pizzarisation:
        runs-on: ubuntu-latest
        needs: [validation]
        outputs: 
            data_string: ${{ steps.set-data.outputs.data }}
        if: fromJSON(needs.validation.outputs.authorised-actor) && fromJSON(needs.validation.outputs.has-pizza)
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v4
              with:
                node-version: '16'
            - uses: stefanbuck/github-issue-parser@v3
              id: issue-parser
              with:
                template-path: .github/ISSUE_TEMPLATE/order-pizza.yml
            - name: Set environment submission data
              id: set-data
              run: echo 'data=${{ steps.issue-parser.outputs.jsonString }}' >> "$GITHUB_OUTPUT"

    burgerisation:
        runs-on: ubuntu-latest
        needs: [validation]
        if: fromJSON(needs.validation.outputs.authorised-actor) && fromJSON(needs.validation.outputs.has-burger)
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v4
              with:
                node-version: '16'
            - uses: stefanbuck/github-issue-parser@v3
              id: issue-parser
              with:
                template-path: .github/ISSUE_TEMPLATE/order-burger.yml
                
            - run: echo ${{ steps.issue-parser.outputs.jsonString }} > order.json
            - run: cat order.json
            - name: Upload order result
              uses: actions/upload-artifact@v4
              with:
                name: order_data
                path: order.json

    completion:
        runs-on: ubuntu-latest
        needs: [pizzarisation, burgerisation]
        if: |
            !failure() 
            && !cancelled() 
            && (success('pizzarisation') || success('burgerisation'))
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v4
              with:
                node-version: '16' 

            - name: Download order result
              uses: actions/download-artifact@v4
              with:
                name: order_data
            - name: Restore data
              id: set-completion-data
              shell: bash
              run: |
                data=`cat order.json`
                echo $data > order.json

            - name: Set variables
              id: set-variables
              shell: bash
              run: |
                if [[ "${{ needs.pizzarisation.result }}" == "success" ]]; then
                  echo "DATA_SUBMITTER=burgers" >> "$GITHUB_ENV"
                elif [[ "${{ needs.burgerisation.result }}" == "success" ]]; then
                  echo "DATA_SUBMITTER=pizzas" >> "$GITHUB_ENV"
                fi

            - run: echo $DATA_SUBMITTER > submitter.txt
            - run: cat submitter.txt
            - run: node ./place-order.js
            
            - name: Commit changes
              shell: bash
              run: |
                  git config --global user.email "github-actions[bot]@users.noreply.github.com" && \
                  git config --global user.name "github-actions[bot]" && \
                  git add README.md && \
                  git add data.json && \
                  git commit -m 'Place order' && \
                  git push

            - name: Close Issue
              run: gh issue close --comment "Auto-closing issue" ${{ github.event.issue.number }}
              env:
                GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}