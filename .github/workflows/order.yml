name: Process order
on:
    issues:
        types: [labeled]
concurrency: 'main'

jobs:
    validation:
        runs-on: ubuntu-latest
        outputs:
            authorised-actor: ${{ steps.authorised-actor-check.outputs.valid && github.event.label.name == 'merge' }}
            has-pizza: ${{ contains(github.event.issue.labels.*.name, 'pizza') }}
            has-burger: ${{ contains(github.event.issue.labels.*.name, 'burger') }}
        steps:
            - name: Check if actor is authorised
              id: authorised-actor-check
              shell: bash
              run: |
                  if [ "${{ contains(fromJSON(secrets.AUTHORISED_MERGE), github.triggering_actor) }}" ]; then
                    echo "valid=true" >> $GITHUB_OUTPUT;
                  else
                    echo "valid=false" >> $GITHUB_OUTPUT;
                  fi

    pizzarisation:
        runs-on: ubuntu-latest
        needs: [validation]
        outputs:
            order-data: ${{ steps.authorised-actor-check.outputs.valid && github.event.label.name == 'merge' }}
        if: fromJSON(needs.validation.outputs.authorised-actor) && fromJSON(needs.validation.outputs.has-pizza)
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v2
              with:
                node-version: '16'
            - uses: stefanbuck/github-issue-parser@v3
              id: issue-parser
              with:
                template-path: .github/ISSUE_TEMPLATE/order-pizza.yml

            - run: echo '${{ steps.issue-parser.outputs.jsonString }}' > order.json
            - run: cat order.json
            - run: node ./place-pizza-order.js

    burgerisation:
        runs-on: ubuntu-latest
        needs: [validation]
        if: fromJSON(needs.validation.outputs.authorised-actor) && fromJSON(needs.validation.outputs.has-burger)
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v2
              with:
                node-version: '16'
            - uses: stefanbuck/github-issue-parser@v3
              id: issue-parser
              with:
                template-path: .github/ISSUE_TEMPLATE/order-burger.yml

            - run: echo '${{ steps.issue-parser.outputs.jsonString }}' > order.json
            - run: cat order.json
            - run: node ./place-burger-order.js

    completion:
        runs-on: ubuntu-latest
        needs: [pizzarisation, burgerisation]
        if: ${{ always() && contains(needs.*.result, 'success') && !(contains(needs.*.result, 'failure')) }}
        steps:
            - uses: actions/checkout@v2
            - run: echo '${{ contains(needs.*.result, 'success') }}' 
            - run: echo '${{ needs.pizzarisation.result }}' 
            - run: echo '${{ needs.burgerisation.result }}' 

            - name: Commit changes
              shell: bash
              run: |
                  git config --global user.email "github-actions[bot]@users.noreply.github.com" && \
                  git config --global user.name "github-actions[bot]" && \
                  git add README.md && \
                  git add data.json && \
                  git commit -m 'Place order' && \
                  git push

            - name: Close Issue
              run: gh issue close --comment "Auto-closing issue" ${{ github.event.issue.number }}
              env:
                GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}